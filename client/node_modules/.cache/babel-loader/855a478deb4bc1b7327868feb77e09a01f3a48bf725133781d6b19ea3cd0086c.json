{"ast":null,"code":"import { Clerk, ClerkExpressRequireAuth, ClerkExpressWithAuth, clerkClient, createClerkClient, createClerkExpressRequireAuth, createClerkExpressWithAuth, runMiddleware, setClerkApiKey, setClerkApiVersion, setClerkHttpOptions, setClerkServerApiUrl } from \"./chunk-AKYUVZYP.mjs\";\n\n// src/index.ts\nexport * from \"@clerk/backend\";\n\n// src/withAuth.ts\nfunction withAuth(handler, options) {\n  return async (req, res) => {\n    await runMiddleware(req, res, createClerkExpressWithAuth({\n      clerkClient\n    })(options));\n    return handler(req, res);\n  };\n}\n\n// src/requireAuth.ts\nfunction requireAuth(handler, options) {\n  return async (req, res) => {\n    await runMiddleware(req, res, createClerkExpressRequireAuth({\n      clerkClient\n    })(options));\n    return handler(req, res);\n  };\n}\n\n// src/index.ts\nvar {\n  users,\n  smsMessages,\n  sessions,\n  emailAddresses,\n  phoneNumbers,\n  emails,\n  invitations,\n  organizations,\n  clients,\n  allowlistIdentifiers,\n  domains\n} = clerkClient;\nvar src_default = clerkClient;\nexport { Clerk, ClerkExpressRequireAuth, ClerkExpressWithAuth, allowlistIdentifiers, clerkClient, clients, createClerkClient, createClerkExpressRequireAuth, createClerkExpressWithAuth, src_default as default, domains, emailAddresses, emails, invitations, organizations, phoneNumbers, requireAuth, sessions, setClerkApiKey, setClerkApiVersion, setClerkHttpOptions, setClerkServerApiUrl, smsMessages, users, withAuth };","map":{"version":3,"names":["withAuth","handler","options","req","res","runMiddleware","createClerkExpressWithAuth","clerkClient","requireAuth","createClerkExpressRequireAuth","users","smsMessages","sessions","emailAddresses","phoneNumbers","emails","invitations","organizations","clients","allowlistIdentifiers","domains","src_default"],"sources":["/Users/riku.isayama/Documents/0/chat-app/client/node_modules/@clerk/clerk-sdk-node/src/index.ts","/Users/riku.isayama/Documents/0/chat-app/client/node_modules/@clerk/clerk-sdk-node/src/withAuth.ts","/Users/riku.isayama/Documents/0/chat-app/client/node_modules/@clerk/clerk-sdk-node/src/requireAuth.ts"],"sourcesContent":["import {\n  Clerk,\n  clerkClient,\n  ClerkExpressRequireAuth,\n  ClerkExpressWithAuth,\n  createClerkClient,\n  setClerkApiKey,\n  setClerkApiVersion,\n  setClerkHttpOptions,\n  setClerkServerApiUrl,\n} from './clerkClient';\nimport { createClerkExpressRequireAuth } from './clerkExpressRequireAuth';\nimport { createClerkExpressWithAuth } from './clerkExpressWithAuth';\nimport type {\n  ClerkMiddleware,\n  ClerkMiddlewareOptions,\n  LooseAuthProp,\n  RequireAuthProp,\n  StrictAuthProp,\n  WithAuthProp,\n} from './types';\n\nexport * from '@clerk/backend';\n/**\n * The order of these exports is important, as we want Clerk from clerk/sdk-node\n * to shadow the Clerk export from clerk/backend, because it needs to support\n * 2 additional apis: clerk.expressWithAuth, clerk.expressRequireAuth\n */\nexport {\n  createClerkClient,\n  clerkClient,\n  setClerkApiKey,\n  setClerkApiVersion,\n  setClerkHttpOptions,\n  setClerkServerApiUrl,\n  Clerk,\n  ClerkExpressRequireAuth,\n  ClerkExpressWithAuth,\n};\n\nconst {\n  users,\n  smsMessages,\n  sessions,\n  emailAddresses,\n  phoneNumbers,\n  emails,\n  invitations,\n  organizations,\n  clients,\n  allowlistIdentifiers,\n  domains,\n} = clerkClient;\n\nexport {\n  users,\n  smsMessages,\n  sessions,\n  emailAddresses,\n  phoneNumbers,\n  emails,\n  invitations,\n  organizations,\n  clients,\n  allowlistIdentifiers,\n  domains,\n};\n\nexport default clerkClient;\n\nexport type { LooseAuthProp, StrictAuthProp, WithAuthProp, RequireAuthProp, ClerkMiddleware, ClerkMiddlewareOptions };\n\nexport { createClerkExpressRequireAuth };\nexport { createClerkExpressWithAuth };\n\nexport { withAuth } from './withAuth';\nexport { requireAuth } from './requireAuth';\n","import type { Request, Response } from 'express';\n\nimport { clerkClient } from './clerkClient';\nimport { createClerkExpressWithAuth } from './clerkExpressWithAuth';\nimport type { ClerkMiddlewareOptions, WithAuthProp } from './types';\nimport { runMiddleware } from './utils';\n\ntype ApiHandlerWithAuth<TRequest, TResponse> = (req: WithAuthProp<TRequest>, res: TResponse) => void | Promise<void>;\n\n// TODO: drop the Request/Response default values in v5 version\nexport function withAuth<TRequest extends Request = Request, TResponse extends Response = Response>(\n  handler: ApiHandlerWithAuth<TRequest, TResponse>,\n  options?: ClerkMiddlewareOptions,\n): any {\n  return async (req: TRequest, res: TResponse) => {\n    await runMiddleware(req, res, createClerkExpressWithAuth({ clerkClient })(options));\n\n    return handler(req as WithAuthProp<TRequest>, res);\n  };\n}\n","import type { Request, Response } from 'express';\n\nimport { clerkClient } from './clerkClient';\nimport { createClerkExpressRequireAuth } from './clerkExpressRequireAuth';\nimport type { ClerkMiddlewareOptions, RequireAuthProp } from './types';\nimport { runMiddleware } from './utils';\n\ntype ExpressApiHandlerRequireAuth<T = any> = (req: RequireAuthProp<Request>, res: Response<T>) => void | Promise<void>;\n\nexport function requireAuth(handler: ExpressApiHandlerRequireAuth, options?: ClerkMiddlewareOptions): any {\n  return async (req: Request, res: Response) => {\n    await runMiddleware(req, res, createClerkExpressRequireAuth({ clerkClient })(options));\n\n    return handler(req as RequireAuthProp<Request>, res);\n  };\n}\n"],"mappings":";;;AAsBA,cAAc;;;ACZP,SAASA,SACdC,OAAA,EACAC,OAAA,EACK;EACL,OAAO,OAAOC,GAAA,EAAeC,GAAA,KAAmB;IAC9C,MAAMC,aAAA,CAAcF,GAAA,EAAKC,GAAA,EAAKE,0BAAA,CAA2B;MAAEC;IAAY,CAAC,EAAEL,OAAO,CAAC;IAElF,OAAOD,OAAA,CAAQE,GAAA,EAA+BC,GAAG;EACnD;AACF;;;ACVO,SAASI,YAAYP,OAAA,EAAuCC,OAAA,EAAuC;EACxG,OAAO,OAAOC,GAAA,EAAcC,GAAA,KAAkB;IAC5C,MAAMC,aAAA,CAAcF,GAAA,EAAKC,GAAA,EAAKK,6BAAA,CAA8B;MAAEF;IAAY,CAAC,EAAEL,OAAO,CAAC;IAErF,OAAOD,OAAA,CAAQE,GAAA,EAAiCC,GAAG;EACrD;AACF;;;AFyBA,IAAM;EACJM,KAAA;EACAC,WAAA;EACAC,QAAA;EACAC,cAAA;EACAC,YAAA;EACAC,MAAA;EACAC,WAAA;EACAC,aAAA;EACAC,OAAA;EACAC,oBAAA;EACAC;AACF,IAAIb,WAAA;AAgBJ,IAAOc,WAAA,GAAQd,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}